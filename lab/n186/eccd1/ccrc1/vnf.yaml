vnflcm:
  vnfInstanceName: n186-eccd1-ccrc1
  vnfProductName: CCRC
  vnfSoftwareVersion: 1.12.6+1
  instantiate-file: instantiate.json
  values-file: values.yaml
  clusterName: n186-eccd1
  namespace: ccrc1
access-info:
  oam: ccrc1-oam.n186-eccd1.seli.gic.ericsson.se
  ldap-admin:
    user: sysadmin
    pass: c3lzQWRtMW5ARGF5MA==
  users:
  - user: ccrc-admin
    pass: RG01R0NAUzBsdXQhb24=
    pass-init: Q2hhbmdlbWVAMXN0
  - user: ccrc-sec
    pass: RG01R0NAUzBsdXQhb24=
    pass-init: Q2hhbmdlbWVAMXN0
pipeline:
- module: create-namespace
- module: create-k8s-secret
  name: eric-sec-ldap-server-creds
  sources:
  - type: literal
    key: adminuser
    value: sysadmin
  - type: literal
    key: passwd
    value: sysAdm1n@Day0
  - type: literal
    key: adminpasswd
    value: $6$fzLPYlRZCpweJMJC$AiNfP0WYE3npY8Za6GxMFoGj75TOl.TS6tmnnky2Bv5wY0Ek8RIoJlr9pyj0LF3wMMaNsNTUH4jp2lIHviJGS0
- module: create-k8s-secret
  name: snmp-alarm-provider-config
  sources:
  - type: file
    key: config.json
    file: snmp-config.json
- module: create-k8s-secret
  name: eric-data-distributed-coordinator-creds
  sources:
  - type: literal
    key: etcdpasswd
    value: sysAdm1n@Day0
- module: create-k8s-secret
  name: eric-data-object-storage-mn-creds
  sources:
  - type: literal
    key: accesskey
    value: admin
  - type: literal
    key: secretkey
    value: sysAdm1n@Day0
- module: instantiate
- module: verify-pod-running
  ignore-not-running:
  - eric-data-search-engine-curator
- module: run-k8s-command
  name: Create outbound policy for non-443 TLS
  cmd: |
    apply -f {file1}
    apply -f {file2}
    apply -f {file3}
    apply -f {file4}
    apply -f {file5}
    apply -f {file6}
  inline-files:
    file1: outbound-policy/auto-sni-amf.yaml
    file2: outbound-policy/auto-sni-smf.yaml
    file3: outbound-policy/destination-rules.yaml
    file4: outbound-policy/service-entries.yaml
    file5: outbound-policy/tcp-options-for-tls-amf.yaml
    file6: outbound-policy/tcp-options-for-tls-smf.yaml
- module: run-k8s-command
  name: Create networkpolicy to allow accessing eric-pm-server and eric-data-search-engine
  cmd: |
    apply -f {file1}
    apply -f {file2}
  inline-files:
    file1: network-policy/eric-pm-server-allow.yaml
    file2: network-policy/eric-data-search-engine-allow.yaml
- module: run-k8s-command
  name: Create pm server ingress
  cmd: create ingress eric-pm-server --rule="eric-pm-server-ccrc.ingress.n186-eccd1.seli.gic.ericsson.se/*=eric-pm-server:9090"
- module: verify-pod-ready
  check-interval: 5
  deployments:
  - eric-cm-yang-provider
- module: load-cmyp-user-config
  file: user-config.xml
  proto: netconf
  retry-interval: 30
- module: sleep
  duration: 30
- module: change-initial-password
- module: load-cmyp-app-config
  file: external-certificates.xml
  user-id: 1
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: nrf-config.xml
  user-id: 0
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: nrfagent-config.xml
  user-id: 0
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: nssf-config.xml
  user-id: 0
  proto: netconf
- module: sleep
  duration: 10
- module: load-cmyp-app-config
  file: ddc-config.xml
  user-id: 0
  proto: netconf
- module: sleep
  duration: 180
- module: provision-nssf
  host: nssf-prov.ccrc1-oam.n186-eccd1.seli.gic.ericsson.se
  trustca: ../../../certs/RootCA/ca.crt
  client-cert: ../../../certs/n186-eccd1/ccrc1/ccrc1-nssf-sbi-client.crt
  client-key: ../../../certs/n186-eccd1/ccrc1/ccrc1-nssf-sbi-client.key
  prov-data:
  - api-path: /profiles/amf-set-profiles/amf-set-id/240-81-ff-002
    json-data: nssf-provisioning/amf-set-profile.json
  - api-path: /profiles/nrf-instance-profiles/nrf-slice-common-region-001
    json-data: nssf-provisioning/nrf-instance-profile.json
  - api-path: /profiles/tai-group-nss-profiles/tai-group-slice1-amf-001
    json-data: nssf-provisioning/tai-group-profile.json
  - api-path: /profiles/network-slice-instances/nsi-slice-common-region-001
    json-data: nssf-provisioning/slice-instance-profile.json
